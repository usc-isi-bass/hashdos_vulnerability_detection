#! /usr/bin/env python3
import argparse
import csv
import os
import subprocess
import tempfile

parser = argparse.ArgumentParser(
    description='Build a set of binaries.')
parser.add_argument('--csv-in', action='store', metavar='FILE',
                    required=True, help='CSV listing soruce and options')
parser.add_argument('--source', action='store', metavar='DIRECTORY',
                    required=True, help='Location of compiled .c files')


def main():
    args = parser.parse_args()

    print('Setting up directories...')
    tempdir = tempfile.mkdtemp(prefix='binalyzer_test.')
    programs_path = os.path.join(tempdir, 'sources')
    os.mkdir(programs_path)

    print('Building programs in {}...'.format(tempdir))
    with open(args.csv_in, newline='') as csvfile:
        csv_reader = csv.DictReader(csvfile, delimiter=',')
        line_count = 0
        for entry in csv_reader:
            if line_count != 0:
                # Generate output file name as source_compiler_flag
                filename = os.path.join(programs_path, '{}_{}_{}'.format(
                    entry['source'][:-2],
                    entry['compiler'],
                    entry['flag']))

                print('Running {} on {}...'.format(entry['compiler'],
                                                   entry['source']))
                # Run the compiler on the source file and generate
                subprocess.run([entry['compiler'],
                                os.path.join(args.source, entry['source']),
                                entry['flag'],
                                '-o', filename])

            line_count += 1

    print('Finished building programs in {}!'.format(tempdir))


if __name__ == "__main__":
    main()
