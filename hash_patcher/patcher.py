import os
import angr
import shutil
import logging
import stat

l = logging.getLogger(name=__name__)

class Patcher(object):

    def __init__(self, proj):
        self._proj = proj
        self._patches = {}

    def add_patch(self, patch_addr, patch_bytes):
        self._patches[patch_addr] = patch_bytes

    def apply_patches(self, patched_elf_name):
        if len(self._patches) > 0:
            patched_file = patched_elf_name
            if os.path.exists(patched_file):
                l.debug("Patched file already exists, deleting...")
                os.remove(patched_file)
            shutil.copyfile(self._proj.filename, patched_file)
            for patch_addr in self._patches:
                print("Patching at address: 0x{:x}".format(patch_addr))
                patch_bytes = self._patches[patch_addr]
                with open(patched_file, 'rb+') as fd:
                    patch_offset = self._proj.loader.main_object.addr_to_offset(patch_addr)
                    fd.seek(patch_offset)
                    fd.write(patch_bytes)
            os.chmod(patched_file, stat.S_IWUSR | stat.S_IRUSR | stat.S_IXUSR)
