import angr

import util.angr_util as angr_util

class HashFuncRunner:

    def __init__(self, elf_file_name, hash_func_addr):
        self._elf_file_name = elf_file_name
        self._hash_func_addr = hash_func_addr

        self._proj = angr.Project(self._elf_file_name, auto_load_libs=False)


    def run_conc(self, key):
        key_len = len(key)

        call_state = self._proj.factory.call_state(self._hash_func_addr, key, key_len)

        simgr = self._proj.factory.simulation_manager(call_state)

        simgr.run()

        assert len(simgr.deadended) == 1, "We executed the hash func with concrete input, but now we have more than one deadended state?"
        ret_state = simgr.deadended[0]
        ret_reg = angr_util.get_ret_reg(self._proj, ret_state)
        hash_val = ret_state.solver.eval(ret_reg)

        return hash_val
