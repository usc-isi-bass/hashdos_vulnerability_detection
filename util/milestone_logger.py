import datetime

class MilestoneLogger:


    def __init__(self):
        self.milestone_timestamps = []

    def add_milestone(self, milestone_msg, time):
        self.milestone_timestamps.append((milestone_msg, time))

    def log_milestone(self, milestone_msg):
        self.add_milestone(milestone_msg, datetime.datetime.now())

    # For every milestone timestamp compute the total time (in seconds) from the previous milestone timestamp
    def calc_milestone_deltas(self):
        deltas = {self.milestone_timestamps[0][0]: None}
        for i in range(1, len(self.milestone_timestamps)):
            prev_timestamp = self.milestone_timestamps[i - 1][1]
            
            curr_label, curr_timestamp = self.milestone_timestamps[i]
            delta = (curr_timestamp - prev_timestamp).total_seconds()
            deltas[curr_label] = delta
        return deltas
