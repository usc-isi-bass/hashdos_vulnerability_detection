import argparse
import json

def main():
    parser = argparse.ArgumentParser()
    parser.add_argument('results', help='the results file to query')
    args = parser.parse_args()
    results_file = args.results
    with open(results_file, 'r') as fd:
        elf_to_path_set = {}
        for i, line in enumerate(fd):
            line = line.strip()
            result = json.loads(line)
            deb_name = result[0]['deb']['deb_name']
            elf_name = result[0]['elf']['elf_name']
            elf_md5 = result[0]['elf']['elf_md5']
            #if 'hash_funcs' in results['analysis_metrics']:
            #if 'analysis_metrics' not in results[1]:
            #    print(results)
            if 'analysis_metrics' in result[1] and 'hit' in result[1]['analysis_metrics'] and result[1]['analysis_metrics']['hit']:
                if 'static_analysis' in result[1]: 
                    static_analysis_results = result[1]['static_analysis']
                    for input_hash_func_pair_str in static_analysis_results:
                        for input_hash_results in static_analysis_results[input_hash_func_pair_str]:
                            ddg_source_sink_paths = input_hash_results['ddg_source_sink_path']
                            start_func = input_hash_results['start']
                            if ddg_source_sink_paths:
                                for ddg_source_sink_path in ddg_source_sink_paths:
                                    input_hash_func_pair = tuple(input_hash_func_pair_str)
                                    if (elf_name, deb_name) in elf_to_path_set:
                                        elf_to_path_set[(elf_name, deb_name)].add((start_func, input_hash_func_pair_str))
                                    else:
                                        elf_to_path_set[(elf_name, deb_name)] = set([(start_func, input_hash_func_pair_str)])
        for elf_name, deb_name in elf_to_path_set:
            for start, input_hash_func_pair_str in elf_to_path_set[(elf_name, deb_name)]:
                print(elf_name.encode('utf-8'), deb_name.encode('utf-8'), start.encode('utf-8'), input_hash_func_pair_str.encode('utf-8'))

if __name__ == "__main__":
    main()
